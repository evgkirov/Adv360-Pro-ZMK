/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <52 65 66 67 35 36 37 38 52 53 66 67 68 69 70 7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <35 36 37 38 52 53 66 67 68 69 70 5 6 19 20 0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL                                 &kp N1        &kp N2       &kp N3       &kp N4        &kp N5       &tog 1                                                   &mo 3      &kp N6       &kp N7        &kp N8       &kp N9       &kp N0           &kp MINUS
&kp TAB                                   &kp Q         &kp W        &kp E        &kp R         &kp T        &none                                                    &none      &kp Y        &kp U         &kp I        &kp O        &kp P            &kp BSLH
&mt LS(LA(LC(LG(RS(RA(RC(RGUI))))))) ESC  &hml LCTRL A  &hml LALT S  &hml LGUI D  &hml LSHFT F  &hml RALT G  &none     &kp LGUI  &kp LCTRL      &kp RALT   &kp RCMD   &none      &hmr RALT H  &hmr LSHFT J  &hmr LGUI K  &hmr LALT L  &hmr LCTRL SEMI  &kp SQT
&kp F13                                   &kp Z         &kp X        &kp C        &kp V         &kp B                            &none          &kp PG_UP                        &kp N        &kp M         &kp COMMA    &kp DOT      &kp FSLH         &kp F16
&mo 2                                     &kp GRAVE     &caps_word   &kp LEFT     &kp RIGHT                  &kp BSPC  &kp F18   &kp DEL        &kp PG_DN  &kp ENTER  &kp SPACE               &kp UP        &kp DOWN     &kp LBKT     &kp RBKT         &mo 2
            >;
        };

        layer_nomods {
            bindings = <
&kp EQUAL  &kp N1     &kp N2  &kp N3  &kp N4  &kp N5  &trans                                      &mo 3   &kp N6  &kp N7  &kp N8     &kp N9            &kp N0         &kp MINUS
&trans     &kp Q      &kp W   &kp E   &kp R   &kp T   &trans                                      &trans  &kp Y   &kp U   &kp I      &kp O             &kp P          &kp BSLH
&trans     &kp A      &kp S   &kp D   &kp F   &kp G   &trans  &trans  &trans      &trans  &trans  &trans  &kp H   &kp J   &kp K      &kp L             &kp SEMICOLON  &kp SQT
&kp LSHFT  &kp Z      &kp X   &kp C   &kp V   &kp B                   &trans      &trans                  &kp N   &kp M   &kp COMMA  &kp PERIOD        &kp SLASH      &kp RSHFT
&trans     &kp GRAVE  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans     &kp LEFT_BRACKET  &kp RBKT       &trans
            >;

            label = "No Mods";
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
